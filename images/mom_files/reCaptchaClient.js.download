/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaClient.js":
/*!****************************************************************************************************************!*\
  !*** ../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaClient.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var recaptcha = __webpack_require__(/*! ./reCaptchaScript.js */ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaScript.js");
/**
 * Creating modal and filling data on submiting the form
 */


function submitForm() {
  $(document).on('click', '.g-recaptcha-form-js button', function (e) {
    e.preventDefault();
    e.stopImmediatePropagation();
    var form = $(this).closest('form');

    if (form[0].checkValidity && !form[0].checkValidity()) {
      e.stopPropagation();
      e.stopImmediatePropagation();
      return;
    }

    var siteKey = $(this).closest('.g-recaptcha-form-js').find('.g-recaptcha').data('v3-sitekey');
    recaptcha.reCaptcha(siteKey, form);
  });
}

module.exports = {
  submitForm: submitForm
};

/***/ }),

/***/ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaScript.js":
/*!****************************************************************************************************************!*\
  !*** ../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaScript.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var recaptchaHelper = __webpack_require__(/*! ./recaptchaHelper.js */ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptchaHelper.js");

var recaptcha = __webpack_require__(/*! ./recaptcha.js */ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptcha.js"); // reCaptcha SCORE(V3) validation
// see https://developers.google.com/recaptcha/docs/v3 for example

/**
 * @param {string} siteKey reCaptcha site key
 * @param {selector} form form
 */


function reCaptcha(siteKey, form) {
  // eslint-disable-next-line no-undef
  if (window.grecaptcha && grecaptcha) {
    // eslint-disable-next-line no-undef
    grecaptcha.ready(function () {
      var sitekey = siteKey; // Recaptcha Enterprise Site Key (Score Integration)

      if (sitekey) {
        // eslint-disable-next-line no-undef
        grecaptcha.execute(sitekey, {
          action: 'submit'
        }).then(function (token) {
          recaptchaHelper.verifyTokenCallback(token, $('.g-recaptcha')).then(function (data) {
            if (!data.result) {
              if ($('#g-recaptch-error').length > 0) {
                $('#g-recaptch-error').remove();
              }

              if ($('.g-recaptcha').children().length > 0) {
                var errorMessage = form.closest('.g-recaptcha-form-js').find('.g-recaptcha').data('error-message') || form.find('.g-recaptcha').data('error-message');
                var errorHtml = '<p id="g-recaptch-error" aria-hidden="true" class="error-container invalid-feedback d-block">' + errorMessage + '</p>';
                $(errorHtml).insertBefore(form.closest('.g-recaptcha-form-js').find('.g-recaptcha') || form.find('.g-recaptcha'));
              }

              recaptcha.initialized(form);
            } else {
              form.submit();
            }
          });
        });
      }
    });
  } else {
    form.submit();
  }
}

module.exports = {
  reCaptcha: reCaptcha
};

/***/ }),

/***/ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptcha.js":
/*!**********************************************************************************************************!*\
  !*** ../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptcha.js ***!
  \**********************************************************************************************************/
/***/ (function(module) {

var currentForm; // createErrorMessage

var createErrorContainer = function createErrorContainer(form, errMsg) {
  if ($('#g-recaptch-error').length > 0) {
    $('#g-recaptch-error').remove();
  }

  if ($('.g-recaptcha').children().length > 0) {
    var errorHtml = '<p id="g-recaptch-error" aria-hidden="true" class="error-container invalid-feedback d-block">' + errMsg + '</p>';
    $(errorHtml).insertBefore(form);
  }
};

var getGRecaptcha = function getGRecaptcha() {
  if (currentForm.children('.g-recaptcha').length) {
    return currentForm.children('.g-recaptcha');
  }

  return currentForm.siblings('.g-recaptcha');
}; // verifyCallback
// Get token from recaptcha


var verifyCallback = function verifyCallback(response) {
  var widget1ID = getGRecaptcha();
  var gresponse = $('input[name="g_recaptcha_response"]');
  var form = currentForm;
  gresponse.val(response);
  var serializeData = form.serialize();
  serializeData = serializeData + '&' + gresponse.serialize();
  $.ajax({
    method: 'POST',
    url: widget1ID.data('recaptcha-url'),
    data: serializeData,
    contentType: 'application/x-www-form-urlencoded',
    success: function success(data) {
      if (data.result.success) {
        if ($('#g-recaptch-error').length > 0) {
          $('#g-recaptch-error').remove();
        }

        form.submit();
      } else {
        var errorMessage = widget1ID.data('error-message');
        createErrorContainer(widget1ID, errorMessage);
      }
    },
    error: function error() {
      var errorMessage = widget1ID.data('error-message');
      createErrorContainer(widget1ID, errorMessage);
    }
  });
}; // expiredCallback


var expiredCallback = function expiredCallback() {
  var widget1ID = getGRecaptcha();
  var errorMessage = widget1ID.data('expired-message');
  createErrorContainer(widget1ID, errorMessage);
}; // onLoadCallback
// Render recaptcha on payment stage


var onLoadCallback = function onLoadCallback(form) {
  var widget1;
  var recaptcha = window.grecaptcha;
  currentForm = form;
  var widget1ID = getGRecaptcha();
  var gRecaptchaId = widget1ID.attr('id');
  widget1ID.attr('id', 'current-g-recaptcha'); // Only render if recaptcha is ready

  recaptcha.ready(function () {
    if ($('.recaptcha-reset').length) {
      window.recaptchaRendered = false;
    }

    if (window.recaptchaRendered) {
      recaptcha.reset(widget1);
    } else {
      // Load this recaptcha code
      if (widget1ID.length) {
        widget1 = recaptcha.render(widget1ID.attr('id'), {
          siteKey: widget1ID.data('sitekey'),
          callback: verifyCallback,
          expiredCallback: expiredCallback
        });
      }

      window.recaptchaRendered = true;
    }

    widget1ID.attr('id', gRecaptchaId);
  });
}; // recaptcha.initialized


module.exports = {
  initialized: function initialized(form) {
    // Check if recaptcha script is loaded
    if (window.grecaptcha === undefined) {
      // recaptcha has not been rendered.
      window.recaptchaRendered = false; // Load script if it doesn't exist yet.

      var tag = document.createElement('script');
      var firstScript = document.getElementsByTagName('script')[0];
      tag.src = 'https://www.google.com/recaptcha/api.js?render=explicit';
      tag.id = 'grecaptcha-api';
      tag.onload = onLoadCallback(form);
      firstScript.parentNode.insertBefore(tag, firstScript);
    } else {
      // just render the recaptcha
      onLoadCallback(form);
    }
  }
};

/***/ }),

/***/ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptchaHelper.js":
/*!****************************************************************************************************************!*\
  !*** ../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/recaptchaHelper.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

/**
 * @param {string} token - recaptcha token
 * @param {jquery} element - selected element
 * @returns {string} token
 * Validating 'contact-form' all the required fields entered with verified recaptcha then enable/disable submit order button
 */
function verifyTokenCallback(token, element) {
  return $.ajax({
    method: 'POST',
    url: element.data('recaptcha-enterprise-url'),
    data: {
      token: token
    }
  });
}

module.exports = {
  verifyTokenCallback: verifyTokenCallback
};

/***/ }),

/***/ "./cartridges/app_mk_storefront/cartridge/client/default/js/util.js":
/*!**************************************************************************!*\
  !*** ./cartridges/app_mk_storefront/cartridge/client/default/js/util.js ***!
  \**************************************************************************/
/***/ (function(module) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

module.exports = function (include) {
  if (typeof include === 'function') {
    include();
  } else if (_typeof(include) === 'object') {
    Object.keys(include).forEach(function (key) {
      if (typeof include[key] === 'function') {
        include[key]();
      }
    });
  }
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!******************************************************************************************************!*\
  !*** ../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptchaClient.js ***!
  \******************************************************************************************************/
var processInclude = __webpack_require__(/*! brand/util */ "./cartridges/app_mk_storefront/cartridge/client/default/js/util.js");

$(document).ready(function () {
  processInclude(__webpack_require__(/*! ./reCaptcha/reCaptchaClient */ "../../capri-core-sfcc/src/cartridges/int_google/cartridge/client/default/js/reCaptcha/reCaptchaClient.js"));
});
}();
/******/ })()
;
//# sourceMappingURL=reCaptchaClient.js.map